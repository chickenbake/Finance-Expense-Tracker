steps:
# --- Backend Steps ---

# Step 1: Build the backend container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/finance-expense-tracker-backend:$COMMIT_SHA', './backend']
  dir: '.'

# Step 2: Push the backend container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/finance-expense-tracker-backend:$COMMIT_SHA']

# Step 3: Deploy the backend to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'finance-expense-tracker' # Updated service name
    - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/finance-expense-tracker-backend:$COMMIT_SHA'
    - '--region=us-central1'
    - '--platform=managed'
    - '--allow-unauthenticated'
    - '--add-cloudsql-instances=finance-expenses-app:us-central1:expense-tracker-db'
    # Set environment variables (you'll need to set secrets in Cloud Run console manually)
    - '--set-env-vars=DB_USER=postgres,DB_NAME=expense_tracker,CLOUD_SQL_CONNECTION_NAME=finance-expenses-app:us-central1:expense-tracker-db'
    # NOTE: Set SECRET_KEY, JWT_SECRET_KEY, HUGGING_FACE_TOKEN, and DB_PASS manually in Cloud Run console

# --- Frontend Steps ---

# Step 4: Install frontend dependencies
- name: 'gcr.io/cloud-builders/npm'
  dir: 'frontend'
  args: ['install']

# Step 5: Build the frontend static files with production API URL
- name: 'gcr.io/cloud-builders/npm'
  dir: 'frontend'
  env:
    - 'NODE_ENV=production'
  args: ['run', 'build']

# Step 6: Build frontend container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/finance-expense-tracker-frontend:$COMMIT_SHA', './frontend']
  dir: '.'

# Step 7: Push frontend container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/finance-expense-tracker-frontend:$COMMIT_SHA']

# Step 8: Deploy frontend to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'finance-expense-tracker-frontend'
    - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/finance-expense-tracker-frontend:$COMMIT_SHA'
    - '--region=us-central1'
    - '--platform=managed'
    - '--allow-unauthenticated'
    - '--port=8080'

# Store the images in Artifact Registry
images:
- 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/finance-expense-tracker-backend:$COMMIT_SHA'
- 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/finance-expense-tracker-frontend:$COMMIT_SHA'